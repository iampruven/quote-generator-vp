[{"/Users/iampruven/Documents/FrontendPractice/quote-generator-master/quote-display/src/index.js":"1","/Users/iampruven/Documents/FrontendPractice/quote-generator-master/quote-display/src/App.js":"2","/Users/iampruven/Documents/FrontendPractice/quote-generator-master/quote-display/src/reportWebVitals.js":"3"},{"size":500,"mtime":1611082425961,"results":"4","hashOfConfig":"5"},{"size":2529,"mtime":1611102059189,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1611082425963,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"rij1pb",{"filePath":"11","messages":"12","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/Users/iampruven/Documents/FrontendPractice/quote-generator-master/quote-display/src/index.js",[],["16","17"],"/Users/iampruven/Documents/FrontendPractice/quote-generator-master/quote-display/src/App.js",["18","19","20","21","22"],"import React from \"react\";\nimport \"./App.css\";\nconst {\n  randomQuote,\n  authorQuotes,\n  getQuotes,\n  searchQuotes,\n} = require(\"quotegarden\");\n\nclass App extends React.Component {\n  state = {\n    displayQuote: \"\",\n    author: \"\",\n    mainQuoteGenre:'',\n    allQuotes: [],\n    moreQuotes: false,\n  };\n  componentDidMount() {\n    fetch(\"https://quote-garden.herokuapp.com/api/v3/quotes/random\")\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(res.statusText);\n        }\n        return res.json();\n      })\n      .then((quote) => {\n        this.setState({\n          displayQuote: quote.data[0].quoteText,\n          mainQuoteGenre: quote.data[0].quoteGenre,\n          author: quote.data[0].quoteAuthor,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n  showAllQuoteByAuthor = (quoteAuthor) => {\n    fetch(\n      `https://quote-garden.herokuapp.com/api/v3/quotes?author=${quoteAuthor}`\n    )\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(res.statusText);\n        }\n        return res.json();\n      })\n      .then((allQuotes) => {\n       \n        this.setState({ allQuotes: allQuotes.data, moreQuotes: true });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  \n  render() {\n\n \n    return (\n      <>\n        <div className=\"notepaper\">\n          <figure className=\"quote\">\n            <blockquote className=\"curly-quotes\">\n              {this.state.displayQuote}\n            </blockquote>\n            <a\n              href=\"#\"\n              onClick={() => this.showAllQuoteByAuthor(this.state.author)}\n              className=\"quote-by\"\n            >\n              — {this.state.author}\n            </a>\n            <figcaption className=\"quote-by\">{this.state.mainQuoteGenre}</figcaption>\n          </figure>\n        </div>\n\n        {this.state.moreQuotes &&\n          this.state.allQuotes.map((quote, id) => {\n            // console.log(quote.quoteText)\n            return <div key={id} className=\"notepaper\">\n              <figure className=\"quote\">\n                <blockquote className=\"curly-quotes\">\n                  {quote.quoteText}\n                </blockquote>\n                <figcaption\n                  className=\"quote-by\"\n                >\n                  — {this.state.author}\n                </figcaption>\n                <figcaption className=\"quote-by\">{quote.quoteGenre}</figcaption>\n              </figure>\n            </div>\n          })}\n      </>\n    );\n  }\n}\n\nexport default App;\n","/Users/iampruven/Documents/FrontendPractice/quote-generator-master/quote-display/src/reportWebVitals.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":4,"column":3,"nodeType":"29","messageId":"30","endLine":4,"endColumn":14},{"ruleId":"27","severity":1,"message":"31","line":5,"column":3,"nodeType":"29","messageId":"30","endLine":5,"endColumn":15},{"ruleId":"27","severity":1,"message":"32","line":6,"column":3,"nodeType":"29","messageId":"30","endLine":6,"endColumn":12},{"ruleId":"27","severity":1,"message":"33","line":7,"column":3,"nodeType":"29","messageId":"30","endLine":7,"endColumn":15},{"ruleId":"34","severity":1,"message":"35","line":66,"column":13,"nodeType":"36","endLine":70,"endColumn":14},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'randomQuote' is assigned a value but never used.","Identifier","unusedVar","'authorQuotes' is assigned a value but never used.","'getQuotes' is assigned a value but never used.","'searchQuotes' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]